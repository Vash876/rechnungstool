generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Customer {
  id             String    @id @default(cuid())
  customerNumber String    @unique
  company        String?
  firstName      String
  lastName       String
  email          String
  phone          String?
  address        String?
  city           String?
  postalCode     String?
  country        String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  invoices       Invoice[]
  quotes         Quote[]

  @@map("customers")
}

model Invoice {
  id            String        @id @default(cuid())
  invoiceNumber Int           @unique
  date          DateTime      @default(now())
  dueDate       DateTime?
  status        InvoiceStatus @default(DRAFT)
  totalNet      Decimal
  totalTax      Decimal
  totalGross    Decimal
  taxRate       Decimal       @default(19.00)
  notes         String?
  pdfPath       String?
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  customerId    String
  items         InvoiceItem[]
  customer      Customer      @relation(fields: [customerId], references: [id])

  @@map("invoices")
}

model Quote {
  id          String      @id @default(cuid())
  quoteNumber Int         @unique
  date        DateTime    @default(now())
  validUntil  DateTime
  status      QuoteStatus @default(DRAFT)
  totalNet    Decimal
  totalTax    Decimal
  totalGross  Decimal
  taxRate     Decimal     @default(19.00)
  notes       String?
  pdfPath     String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  customerId  String
  items       QuoteItem[]
  customer    Customer    @relation(fields: [customerId], references: [id])

  @@map("quotes")
}

model InvoiceItem {
  id          String  @id @default(cuid())
  description String
  quantity    Decimal
  unitPrice   Decimal
  total       Decimal
  invoiceId   String
  invoice     Invoice @relation(fields: [invoiceId], references: [id], onDelete: Cascade)

  @@map("invoice_items")
}

model QuoteItem {
  id          String  @id @default(cuid())
  description String
  quantity    Decimal
  unitPrice   Decimal
  total       Decimal
  quoteId     String
  quote       Quote   @relation(fields: [quoteId], references: [id], onDelete: Cascade)

  @@map("quote_items")
}

model CompanySettings {
  id                 String   @id @default("company")
  name               String
  address            String
  email              String
  phone              String
  taxNumber          String?
  vatId              String?
  bankAccount        String?
  bankName           String?
  iban               String?
  bic                String?
  logo               String?
  website            String?
  owner              String?
  defaultTaxRate     Decimal  @default(19.00)
  defaultPaymentDue  Int      @default(14)
  isSmallBusiness    Boolean  @default(false)
  currency           String   @default("EUR")
  invoicePrefix      String   @default("R")
  quotePrefix        String   @default("A")
  invoiceStartNum    Int      @default(1)
  quoteStartNum      Int      @default(1)
  invoiceFooter      String?
  quoteFooter        String?
  termsAndConditions String?
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@map("company_settings")
}

enum InvoiceStatus {
  DRAFT
  SENT
  PAID
  OVERDUE
  CANCELLED
}

enum QuoteStatus {
  DRAFT
  SENT
  ACCEPTED
  DECLINED
  EXPIRED
}

model Settings {
  id            String   @id @default(cuid())
  companyName   String
  companyAddress String
  companyPhone  String?
  companyEmail  String?
  taxNumber     String?
  vatId         String?
  bankAccount   String?
  defaultTaxRate Float?  @default(19)
  invoicePrefix String?  @default("RE")
  quotePrefix   String?  @default("AG")
  paymentTerms  String?
  logo          String?
  logoPath      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("settings")
}
